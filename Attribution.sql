SELECT C.SEND_DATE, C.DESCRIPTION, A.ATTRIBUTED_CAMPAIGN, COUNT(DISTINCT M.ID) AS SENT, COUNT(DISTINCT ORDER_NO) AS ORDERS
FROM 
( 
    SELECT DISTINCT H.ORDER_NO, H.PRODUCT_ID, FIRST_VALUE(M.CAMPAIGN_CODE) OVER (PARTITION BY H.ORDER_NO ORDER BY M.SEND_DATE DESC) AS ATTRIBUTED_CAMPAIGN 
    FROM  
  (SELECT H.CANCEL_DT, H.ID, H.ORDER_NO, H.ORDERTRANS_DT, H.EXPIRY_DT, H.PRODUCT_ID
  FROM ANALYTICS.CRUISE_HISTORY_V H 
  WHERE H.ORDERTRANS_DT BETWEEN '2019-12-01' AND '2019-12-31' 
  AND H.CANCEL_DT IS NULL 
      ) H 
        JOIN ANALYTICS.CAMPAIGN_PRODUCT_V V 
            ON V.PRODUCT_ID = H.PRODUCT_ID 
                AND V.EXPIRY_DT = H.EXPIRY_DT 
    LEFT JOIN (SELECT LEFT(CAMPAIGN_CODE, 8) AS BASE_CAMPAIGN, SEND_DATE, COUNT(DISTINCT CAMPAIGN_CODE) AS CODE_COUNT 
          FROM ANALYTICS.CAMPAIGN_V 
          WHERE CATEGORY = 'SMS'
          GROUP BY LEFT(CAMPAIGN_CODE, 8), SEND_DATE 
          ) B ON LEFT(V.CAMPAIGN_CODE, 8) = B.BASE_CAMPAIGN 
        JOIN ANALYTICS.SMS_HISTORY_V M 
            ON M.ID = H.ID 
                AND M.CAMPAIGN_CODE = V.CAMPAIGN_CODE 
                AND M.SEND_DATE BETWEEN DATEADD('day', -28, H.ORDERTRANS_DT) AND H.ORDERTRANS_DT 
    LEFT JOIN ANALYTICS.CAMPAIGN_V C ON C.CAMPAIGN_CODE = M.CAMPAIGN_CODE  
    WHERE C.CATEGORY = 'SMS' ) A 
  LEFT JOIN ANALYTICS.CAMPAIGN_V C ON C.CAMPAIGN_CODE = A.ATTRIBUTED_CAMPAIGN  
  LEFT JOIN ANALYTICS.SMS_HISTORY_V M ON A.ATTRIBUTED_CAMPAIGN = M.CAMPAIGN_CODE 
WHERE  
A.ATTRIBUTED_CAMPAIGN LIKE ANY ('N__CM%', 'P__CM%')   
GROUP BY C.SEND_DATE, C.DESCRIPTION, A.ATTRIBUTED_CAMPAIGN
